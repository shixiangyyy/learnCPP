构造函数和析构函数的构造规则
1、派生类可以不定义构造函数的情况：
基类没有定义任何构造函数
基类具有缺省参数的构造函数
基类具有无参构造函数
2、派生类必须定义构造函数的情况
基类或则和成员对象所属类只含有带参数的构造函数时，
	即使派生类自身没有数据成员要初始化，也必须定义构造函数，
	并以初始化列表的方式向基类/成员对象所属类构造函数传递参数

C++语言标准有一条规则：如果派生类的基类同时也是另一个类的派生类，
则每个派生类只负责它的直接基类的构造函数调用。这表明当派生类的直接基类
只有带参数的构造函数而且没有默认构造函数时，它必须在初始化列表中调用其
直接基类的构造函数，并向基类传递构造函数参数
NOTE:一个例外情况是，当派生类存在虚基类时，所有虚基类都由最终的派生类负责初始化。
(见虚拟继承，派生类初始化)