1、基础理论
	为了实现虚函数，C++使用了一种成为虚拟表的特殊形式的动态绑定机制。本质上，虚函数表是用于解决动态绑定
方式的函数调用函数的查找表。
	每个使用虚函数的类都有自己的虚函数表。该表只是编译器在编译时设置的静态数组。虚拟表包含可由类的对象调
用的每个虚函数的一个条目，每一个条目是一个函数指针，指向该类可以访问的派生函数。
	与此同时，编译器还会添加一个隐藏指向基类的指针，称为vptr。vptr在创建类实例时自动设置，以便指向该类的
虚函数表。与this指针不同的是，this指针是编译器用来解析自引用的函数参数，而vptr是一个真正的指针。
	因此，它使每个类对象分配一个指针大小的vptr，这也意味着vptr由派生类继承，这很重要。